[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { screen, render } from '@testing-library/react';\n\nconst RoleExample = () => {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>button</button>\n      <footer>footer</footer>\n      <h1>heading</h1>\n      <header>banner</header>\n      <img src=\"\" alt=\"description\" /> Img\n      <input type=\"text\" /> Textbox\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"radio\" /> Radio\n      <input type=\"number\" /> Number\n      <ul>list</ul>\n      <li>ListItem</li>\n    </div>\n  );\n};\n\nrender(<RoleExample />);","type":"code","id":"klwcf"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />);\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list',\n  ];\n\n  roles.forEach((role) => {\n    const el = screen.getByRole(role);\n    expect(el).toBeInTheDocument();\n  });\n});","type":"code","id":"mjnx6"},{"content":"const AccessibleName=()=>{ \r\n  return(\r\n    <div>\r\n      <button>submit</button>\r\n      <button>cancel</button>\r\n    </div>\r\n  )\r\n}\r\nrender(<AccessibleName />)","type":"code","id":"279qs"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n\n  const submitButton = screen.getByRole('button', {\n    name: /submit/i,\n  });\n  const cancelButton = screen.getByRole('button', {\n    name: new RegExp('cancel', 'i'),\n  });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"nj8cc"},{"content":"const MoreNames = () => {\n  return (\n    <div>\n      <label htmlFor=\"email\">email</label>\n      <input id=\"email\" type=\"text\" />\n      <label htmlFor=\"search\">search</label>\n      <input id=\"search\" type=\"text\" />\n    </div>\n  );\n};\nrender(<MoreNames />);","type":"code","id":"gvpra"},{"content":"test('show an email and search inputs', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', {\n    name: /email/i,\n  });\n  const searchInput = screen.getByRole('textbox', {\n    name: /search/i,\n  });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"6ms1m"},{"content":"const IconButtons = () => {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n};\n\nrender(<IconButtons />);","type":"code","id":"mh04w"},{"content":"test('find elements based on label', () => {\n  render(<IconButtons />);\n\n  const signInButton = screen.getByRole('button', {\n    name: /sign in/i,\n  });\n  const signOutButton = screen.getByRole('button', {\n    name: /sign out/i,\n  });\n\n  expect(signInButton).toBeInTheDocument();\n  expect(signOutButton).toBeInTheDocument();\n});","type":"code","id":"j5q08"}]